// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using UnityEngine;
using System.Collections.Generic;

public class TetrisBlock
{
	private int[,] block;
	private Vector2 position;

	public TetrisBlock (int type, Vector2 position)
	{
		this.position = position;
		switch (type) {
		case 0:
			block = new int[,] {{1,1},{1,0},{1,0},{0,0}};
			break;
		case 1:
			block = new int[,] {{1,0},{1,1},{0,1},{0,0}};
			break;
		case 2:
			block = new int[,] {{0,1},{1,1},{1,0},{0,0}};
			break;
		case 3:
			block = new int[,] {{1,1},{1,1},{0,0},{0,0}};
			break;
		case 4:
			block = new int[,] {{1,1},{0,1},{0,1},{0,0}};
			break;
		case 5:
			block = new int[,] {{1,0},{1,1},{1,0},{0,0}};
			break;
		case 6:
			block = new int[,] {{1,0},{1,0},{1,0},{1,0}};
			break;
		}
	}

	public void draw() {
		for (int i=0; i<block.GetLength(0); i++) {
			for (int j=0; j<block.GetLength(1); j++) {
				if(block[i,j]==1){
					GameObject tem = GameObject.Find ("left" + (i+(int)position.x) + "_" + (j+(int)position.y));
					tem.gameObject.GetComponent<Renderer>().enabled = true;
				}
			}
		}
	}

	public bool progress() {
		this.position.y++;
		if (position.y + block.GetLength(1) > 17) {
			position.y = 17 - block.GetLength(1);
			return false;
		}
		return true;
	}

	public void write(ref int[,] board) {
		for(int i=0;i<block.GetLength(0);i++) {
			for(int j=0;j<block.GetLength(1);j++) {
				board[i+(int)this.position.x,j+(int)this.position.y] = block[i,j];
			}
		}
	}


	public bool isOverflown() {
		return position.y < 0;
	}

	public bool checkBoard(int[,] board) {
		for(int i=0;i<block.GetLength(0);i++) {
			for(int j=0; j<block.GetLength(1);j++) {
				if(block[i,j]==1) {
					if(board[i+(int)this.position.x,j+(int)this.position.y+1]==1) {
						return false;
					}
				}
			}
		}
		return true;
	}
}
